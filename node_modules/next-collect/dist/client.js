"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useCollector = exports.EventCollectionProvider = exports.EventCollectionContext = void 0;
const react_1 = __importStar(require("react"));
const index_1 = require("./index");
const tools_1 = require("./tools");
exports.EventCollectionContext = (0, react_1.createContext)(null);
const EventCollectionProvider = ({ children, options, }) => {
    const Context = exports.EventCollectionContext;
    return react_1.default.createElement(Context.Provider, { value: options || null }, children);
};
exports.EventCollectionProvider = EventCollectionProvider;
function getPublicUrl() {
    const url = new URL(window.location.href);
    const protocol = (0, tools_1.removeSuffix)(url.protocol, ":");
    return {
        host: url.host.split(":")[0],
        path: url.pathname,
        port: (0, index_1.isDefaultPort)(protocol, url.port),
        protocol,
        queryString: [...url.searchParams].reduce((res, [key, value]) => ({ ...res, [key]: value }), {}),
    };
}
function useCollector() {
    const options = (0, react_1.useContext)(exports.EventCollectionContext);
    return {
        event(eventType, eventProps = {}) {
            const url = getPublicUrl();
            const req = {
                event: {
                    eventType,
                    clickIds: (0, index_1.getUtmsFromQueryString)(url.queryString),
                    host: (0, index_1.getHostWithPort)(url),
                    path: url.path,
                    title: window.document.title,
                    viewportSize: Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0) +
                        "x" +
                        Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0),
                    screenResolution: screen.width + "x" + screen.height,
                    queryString: (0, index_1.getQueryString)(url),
                    referrer: window.document.referrer,
                    localTimezoneOffset: new Date().getTimezoneOffset(),
                    url: window.location.href,
                    utms: (0, index_1.getUtmsFromQueryString)(url.queryString),
                    ...eventProps,
                },
            };
            fetch(options?.apiPath || index_1.defaultCollectApiRoute, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    Accept: "application/json",
                },
                body: JSON.stringify((0, tools_1.sanitizeObject)(req)),
            })
                .then(async (res) => {
                if (!res.ok) {
                    console.warn(`[WARN] failed to send data to ${options?.apiPath || index_1.defaultCollectApiRoute}. Status code: ${res.status} `, await res.text());
                }
            })
                .catch(e => {
                console.warn(`[WARN] failed to send data to ${options?.apiPath || index_1.defaultCollectApiRoute}`, e);
            });
        },
    };
}
exports.useCollector = useCollector;
