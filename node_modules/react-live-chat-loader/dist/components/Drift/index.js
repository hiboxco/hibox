"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _useChat = _interopRequireDefault(require("../../hooks/useChat"));

var _useWindowWidth = _interopRequireDefault(require("../../hooks/useWindowWidth"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const styles = {
  container: {
    WebkitFontSmoothing: 'antialiased',
    fontSize: 16,
    display: 'flex',
    alignItems: 'flex-end',
    padding: '.75rem',
    flexDirection: 'column'
  },
  button: {
    textAlign: 'center',
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    fill: '#fff',
    cursor: 'pointer',
    height: 52,
    width: 52,
    borderRadius: '.3125rem',
    boxShadow: '0 2px 6px 0 rgba(0,0,0,.4)',
    overflow: 'hidden',
    outline: 'none',
    border: 'none'
  },
  iconWrapper: {
    fill: 'inherit',
    stroke: 'inherit',
    width: '100%',
    padding: 0,
    lineHeight: 0
  }
};

const Drift = ({
  color = '#0176ff',
  icon = 'A'
}) => {
  const [state, loadChat] = (0, _useChat.default)({
    loadWhenIdle: true
  });
  const windowWidth = (0, _useWindowWidth.default)();
  const [positionStyles, setPositionStyles] = (0, _react.useState)({
    zIndex: 2147483648,
    position: 'fixed',
    display: 'block',
    height: '60px !important',
    width: '76px !important'
  });
  (0, _react.useEffect)(() => {
    setPositionStyles(state => _objectSpread(_objectSpread({}, state), {}, {
      bottom: windowWidth < 768 ? 0 : '24px',
      right: windowWidth < 768 ? 0 : '24px'
    }));
  }, [windowWidth]);

  if (state === 'complete') {
    return null;
  }

  return /*#__PURE__*/_react.default.createElement("div", {
    style: positionStyles
  }, /*#__PURE__*/_react.default.createElement("div", {
    style: styles.container
  }, /*#__PURE__*/_react.default.createElement("div", {
    role: "button",
    "aria-label": "Load Chat",
    "aria-busy": "true",
    "aria-live": "polite",
    onClick: () => loadChat({
      open: true
    }),
    onMouseEnter: () => loadChat({
      open: false
    }),
    style: _objectSpread({
      backgroundColor: color
    }, styles.button)
  }, /*#__PURE__*/_react.default.createElement("i", {
    style: _objectSpread(_objectSpread({}, styles.iconWrapper), {}, {
      opacity: state === 'initial' ? 1 : 0.75
    })
  }, icon === 'A' ? /*#__PURE__*/_react.default.createElement("svg", {
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    focusable: "false",
    "aria-hidden": "true",
    style: {
      display: state === 'initial' ? 'initial' : 'none'
    }
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M4.583 14.894l-3.256 3.78c-.7.813-1.26.598-1.25-.46a10689.413 10689.413 0 0 1 .035-4.775V4.816a3.89 3.89 0 0 1 3.88-3.89h12.064a3.885 3.885 0 0 1 3.882 3.89v6.185a3.89 3.89 0 0 1-3.882 3.89H4.583z",
    fill: "rgb(255, 255, 255)",
    fillRule: "evenodd"
  })) : icon === 'B' ? /*#__PURE__*/_react.default.createElement("svg", {
    width: "25",
    height: "23",
    viewBox: "0 0 25 23",
    focusable: "false",
    "aria-hidden": "true",
    style: {
      display: state === 'initial' ? 'initial' : 'none'
    }
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M24.516 9.953C24.516 4.453 19.04 0 12.258 0 5.476 0 0 4.452 0 9.953c0 3.318 1.986 6.24 5.05 8.053-.34 2.552-1.815 4.055-1.844 4.084-.14.14-.17.368-.113.567a.524.524 0 0 0 .482.312c2.95 0 5.335-1.93 6.612-3.206.652.086 1.362.142 2.07.142 6.783 0 12.26-4.452 12.26-9.953z",
    fill: "rgb(255, 255, 255)",
    fillRule: "evenodd"
  })) : icon === 'C' ? /*#__PURE__*/_react.default.createElement("svg", {
    width: "25",
    height: "25",
    viewBox: "0 0 25 25",
    focusable: "false",
    "aria-hidden": "true",
    style: {
      display: state === 'initial' ? 'initial' : 'none'
    }
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M22.814 12.25h-1.362v3.063a1.02 1.02 0 0 1-1.744.72L15.92 12.25H11.92c-.94 0-1.703-.785-1.703-1.75V1.75c0-.965.764-1.75 1.703-1.75h10.896c.938 0 1.702.785 1.702 1.75v8.75c0 .965-.764 1.75-1.702 1.75zm-.34-10.208H12.257v8.166h4.086a1.032 1.032 0 0 1 .723.3l2.342 2.34v-1.62c0-.562.456-1.02 1.02-1.02h2.043V2.042zM8.17 10.208h-6.13v8.167h2.044c.564 0 1.022.457 1.022 1.02v1.62l2.34-2.34a1.022 1.022 0 0 1 .724-.3h4.086V14.29a1.02 1.02 0 0 1 2.043 0v4.377c0 .965-.763 1.75-1.702 1.75H8.595L4.808 24.2a1.022 1.022 0 0 1-1.743-.72v-3.063H1.702c-.938 0-1.702-.785-1.702-1.75v-8.75c0-.965.764-1.75 1.702-1.75h6.47a1.022 1.022 0 0 1 0 2.04z",
    fill: "rgb(255, 255, 255)",
    fillRule: "evenodd"
  })) : icon === 'D' ? /*#__PURE__*/_react.default.createElement("svg", {
    width: "25",
    height: "25",
    viewBox: "0 0 25 25",
    focusable: "false",
    "aria-hidden": "true",
    style: {
      display: state === 'initial' ? 'initial' : 'none'
    }
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M23.295 24.412a.987.987 0 0 1-1.123-.43L19.9 20.358H9.527c-1.392 0-2.523-1.153-2.523-2.57V16.3c0-.563.448-1.02 1-1.02.553 0 1 .457 1 1.02v1.485c0 .295.235.533.523.533h10.92c.036 0 .067.018.103.022a.96.96 0 0 1 .527.224.984.984 0 0 1 .14.15c.023.026.054.043.073.075l.725 1.154V9.7a.528.528 0 0 0-.523-.532h-1.48c-.55 0-1-.457-1-1.02 0-.56.45-1.018 1-1.018h1.48c1.392 0 2.524 1.152 2.524 2.57V23.433c0 .452-.293.85-.72.978zM14.49 13.226H4.116L1.844 16.85a.997.997 0 0 1-1.124.43 1.017 1.017 0 0 1-.72-.978V2.57C0 1.152 1.132 0 2.523 0H14.49c1.39 0 2.52 1.152 2.52 2.57v8.085c0 1.418-1.13 2.57-2.52 2.57zm.52-10.656a.528.528 0 0 0-.52-.532H2.522c-.288 0-.522.24-.522.532v10.242l.726-1.153c.02-.032.05-.05.07-.076a.897.897 0 0 1 .296-.256.92.92 0 0 1 .372-.118c.037-.004.068-.022.104-.022h10.92c.288 0 .522-.238.522-.533V2.57z",
    fill: "rgb(255, 255, 255)",
    fillRule: "evenodd"
  })) : null, /*#__PURE__*/_react.default.createElement("svg", {
    width: "17",
    height: "17",
    viewBox: "0 0 17 17",
    focusable: "false",
    "aria-hidden": "true",
    style: {
      display: state === 'initial' ? 'none' : 'initial'
    }
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M16.726 15.402c.365.366.365.96 0 1.324-.178.178-.416.274-.663.274-.246 0-.484-.096-.663-.274L8.323 9.648h.353L1.6 16.726c-.177.178-.416.274-.663.274-.246 0-.484-.096-.663-.274-.365-.365-.365-.958 0-1.324L7.35 8.324v.35L.275 1.6C-.09 1.233-.09.64.274.274c.367-.365.96-.365 1.326 0l7.076 7.078h-.353L15.4.274c.366-.365.96-.365 1.326 0 .365.366.365.958 0 1.324L9.65 8.675v-.35l7.076 7.077z",
    fill: "rgb(255, 255, 255)",
    fillRule: "evenodd"
  }))))));
};

var _default = Drift;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,