"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.utils = void 0;
var crypto = require("crypto");
exports.utils = {
    /**
     * Secure compare, from https://github.com/freewil/scmp
     */
    secureCompare: function (in_a, in_b) {
        var a = Buffer.from(in_a);
        var b = Buffer.from(in_b);
        // return early here if buffer lengths are not equal since timingSafeEqual
        // will throw if buffer lengths are not equal
        if (a.length !== b.length) {
            return false;
        }
        // use crypto.timingSafeEqual if available (since Node.js v6.6.0),
        // otherwise use our own scmp-internal function.
        if (crypto.timingSafeEqual) {
            return crypto.timingSafeEqual(a, b);
        }
        var len = a.length;
        var result = 0;
        for (var i = 0; i < len; ++i) {
            result |= a[i] ^ b[i]; // eslint-disable-line no-bitwise
        }
        return result === 0;
    },
};
