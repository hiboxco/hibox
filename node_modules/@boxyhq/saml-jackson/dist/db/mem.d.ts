import { DatabaseDriver, DatabaseOption, Index, Encrypted } from '../typings';
declare class Mem implements DatabaseDriver {
    private options;
    private store;
    private indexes;
    private cleanup;
    private ttlStore;
    private ttlCleanup;
    private timerId;
    constructor(options: DatabaseOption);
    init(): Promise<Mem>;
    get(namespace: string, key: string): Promise<any>;
    getByIndex(namespace: string, idx: Index): Promise<any>;
    put(namespace: string, key: string, val: Encrypted, ttl?: number, ...indexes: any[]): Promise<any>;
    delete(namespace: string, key: string): Promise<any>;
}
declare const _default: {
    new: (options: DatabaseOption) => Promise<Mem>;
};
export default _default;
