import { Extension } from "./extension";
import { JsonName, Name } from "./name";
import { X509Certificate } from "./x509_cert";
export declare type X509CertificateCreateParamsName = string | JsonName | Name;
export interface X509CertificateCreateParamsBase {
    serialNumber: string;
    notBefore: Date;
    notAfter: Date;
    extensions?: Extension[];
    signingAlgorithm: Algorithm | EcdsaParams;
}
export interface X509CertificateCreateParams extends X509CertificateCreateParamsBase {
    subject?: X509CertificateCreateParamsName;
    issuer?: X509CertificateCreateParamsName;
    publicKey: CryptoKey;
    signingKey: CryptoKey;
}
export interface X509CertificateCreateSelfSignedParams extends X509CertificateCreateParamsBase {
    name?: X509CertificateCreateParamsName;
    keys: CryptoKeyPair;
}
export declare class X509CertificateGenerator {
    static createSelfSigned(params: X509CertificateCreateSelfSignedParams, crypto?: Crypto): Promise<X509Certificate>;
    static create(params: X509CertificateCreateParams, crypto?: Crypto): Promise<X509Certificate>;
}
